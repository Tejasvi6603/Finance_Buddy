{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project - Copy\\\\my-frontend-app\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:3001/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = ({\n  children\n}) => {\n  _s();\n  const [username, setUsername] = useState(''); // Add the username state\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const history = useHistory();\n  useEffect(() => {\n    console.log('Global username:', username); // Check if the username is being set correctly\n  }, [username]);\n\n  //calculate incomes\n  const addIncome = async income => {\n    const response = await axios.post(`${BASE_URL}add-income`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getIncomes();\n  };\n  const getIncomes = async () => {\n    const response = await axios.get(`${BASE_URL}get-income`);\n    setIncomes(response.data);\n    console.log(response.data);\n  };\n  const deleteIncome = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-income/${id}`);\n    getIncomes();\n  };\n  const totalIncome = () => {\n    let totalIncome = 0;\n    incomes.forEach(income => {\n      totalIncome = totalIncome + income.amount;\n    });\n    return totalIncome;\n  };\n\n  //calculate incomes\n  const addExpense = async income => {\n    const response = await axios.post(`${BASE_URL}add-expense`, income).catch(err => {\n      setError(err.response.data.message);\n    });\n    getExpenses();\n  };\n  const getExpenses = async () => {\n    const response = await axios.get(`${BASE_URL}get-expense`);\n    setExpenses(response.data);\n    console.log(response.data);\n  };\n  const deleteExpense = async id => {\n    const res = await axios.delete(`${BASE_URL}delete-expense/${id}`);\n    getExpenses();\n  };\n  const totalExpenses = () => {\n    let totalExpenses = 0;\n    expenses.forEach(expense => {\n      totalExpenses = totalExpenses + expense.amount;\n    });\n    return totalExpenses;\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => {\n      return new Date(b.createdAt) - new Date(a.createdAt);\n    });\n    return history.slice(0, 3);\n  };\n  const login = async credentials => {\n    try {\n      const response = await axios.post(`${BASE_URL}login`, credentials);\n      // You can handle the successful login here, e.g., store the token in localStorage and redirect to the dashboard page.\n      history.push('/');\n    } catch (err) {\n      setError(err.response.data.message);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError,\n      username,\n      // Add the username to the value object\n      setUsername\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"62r0XHNvNpjgHgbRSGJKYK5JklI=\", false, function () {\n  return [useHistory];\n});\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","useHistory","jsxDEV","_jsxDEV","BASE_URL","GlobalContext","createContext","GlobalProvider","children","_s","username","setUsername","incomes","setIncomes","expenses","setExpenses","error","setError","history","useEffect","console","log","addIncome","income","response","post","catch","err","data","message","getIncomes","get","deleteIncome","id","res","delete","totalIncome","forEach","amount","addExpense","getExpenses","deleteExpense","totalExpenses","expense","totalBalance","transactionHistory","sort","a","b","Date","createdAt","slice","login","credentials","push","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","useGlobalContext","_s2","$RefreshReg$"],"sources":["D:/Project - Copy/my-frontend-app/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\"\r\nimport axios from 'axios'\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n\r\nconst BASE_URL = \"http://localhost:3001/api/v1/\";\r\n\r\n\r\nconst GlobalContext = React.createContext()\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [username, setUsername] = useState(''); // Add the username state\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        console.log('Global username:', username); // Check if the username is being set correctly\r\n      }, [username]);\r\n    \r\n\r\n    //calculate incomes\r\n    const addIncome = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-income`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getIncomes()\r\n    }\r\n\r\n    const getIncomes = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-income`)\r\n        setIncomes(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteIncome = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-income/${id}`)\r\n        getIncomes()\r\n    }\r\n\r\n    const totalIncome = () => {\r\n        let totalIncome = 0;\r\n        incomes.forEach((income) =>{\r\n            totalIncome = totalIncome + income.amount\r\n        })\r\n\r\n        return totalIncome;\r\n    }\r\n\r\n\r\n    //calculate incomes\r\n    const addExpense = async (income) => {\r\n        const response = await axios.post(`${BASE_URL}add-expense`, income)\r\n            .catch((err) =>{\r\n                setError(err.response.data.message)\r\n            })\r\n        getExpenses()\r\n    }\r\n\r\n    const getExpenses = async () => {\r\n        const response = await axios.get(`${BASE_URL}get-expense`)\r\n        setExpenses(response.data)\r\n        console.log(response.data)\r\n    }\r\n\r\n    const deleteExpense = async (id) => {\r\n        const res  = await axios.delete(`${BASE_URL}delete-expense/${id}`)\r\n        getExpenses()\r\n    }\r\n\r\n    const totalExpenses = () => {\r\n        let totalExpenses = 0;\r\n        expenses.forEach((expense) => {\r\n          totalExpenses = totalExpenses + expense.amount;\r\n        });\r\n        return totalExpenses;\r\n      };\r\n      \r\n\r\n\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses()\r\n    }\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses]\r\n        history.sort((a, b) => {\r\n            return new Date(b.createdAt) - new Date(a.createdAt)\r\n        })\r\n\r\n        return history.slice(0, 3)\r\n    }\r\n\r\n    \r\n    \r\n      const login = async (credentials) => {\r\n        try {\r\n          const response = await axios.post(`${BASE_URL}login`, credentials);\r\n          // You can handle the successful login here, e.g., store the token in localStorage and redirect to the dashboard page.\r\n          history.push('/');\r\n        } catch (err) {\r\n          setError(err.response.data.message);\r\n        }\r\n      };\r\n    \r\n\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError,\r\n            username, // Add the username to the value object\r\n            setUsername \r\n            \r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useGlobalContext = () =>{\r\n    return useContext(GlobalContext)\r\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}